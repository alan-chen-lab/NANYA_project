;; Auto-generated. Do not edit!


(when (boundp 'auto_charge_service::aurco_info)
  (if (not (find-package "AUTO_CHARGE_SERVICE"))
    (make-package "AUTO_CHARGE_SERVICE"))
  (shadow 'aurco_info (find-package "AUTO_CHARGE_SERVICE")))
(unless (find-package "AUTO_CHARGE_SERVICE::AURCO_INFO")
  (make-package "AUTO_CHARGE_SERVICE::AURCO_INFO"))

(in-package "ROS")
;;//! \htmlinclude aurco_info.msg.html


(defclass auto_charge_service::aurco_info
  :super ros::object
  :slots (_x _y _z _roll _pitch _yaw _get_aruco _not_get_aruco ))

(defmethod auto_charge_service::aurco_info
  (:init
   (&key
    ((:x __x) 0.0)
    ((:y __y) 0.0)
    ((:z __z) 0.0)
    ((:roll __roll) 0.0)
    ((:pitch __pitch) 0.0)
    ((:yaw __yaw) 0.0)
    ((:get_aruco __get_aruco) nil)
    ((:not_get_aruco __not_get_aruco) nil)
    )
   (send-super :init)
   (setq _x (float __x))
   (setq _y (float __y))
   (setq _z (float __z))
   (setq _roll (float __roll))
   (setq _pitch (float __pitch))
   (setq _yaw (float __yaw))
   (setq _get_aruco __get_aruco)
   (setq _not_get_aruco __not_get_aruco)
   self)
  (:x
   (&optional __x)
   (if __x (setq _x __x)) _x)
  (:y
   (&optional __y)
   (if __y (setq _y __y)) _y)
  (:z
   (&optional __z)
   (if __z (setq _z __z)) _z)
  (:roll
   (&optional __roll)
   (if __roll (setq _roll __roll)) _roll)
  (:pitch
   (&optional __pitch)
   (if __pitch (setq _pitch __pitch)) _pitch)
  (:yaw
   (&optional __yaw)
   (if __yaw (setq _yaw __yaw)) _yaw)
  (:get_aruco
   (&optional __get_aruco)
   (if __get_aruco (setq _get_aruco __get_aruco)) _get_aruco)
  (:not_get_aruco
   (&optional __not_get_aruco)
   (if __not_get_aruco (setq _not_get_aruco __not_get_aruco)) _not_get_aruco)
  (:serialization-length
   ()
   (+
    ;; float64 _x
    8
    ;; float64 _y
    8
    ;; float64 _z
    8
    ;; float32 _roll
    4
    ;; float32 _pitch
    4
    ;; float32 _yaw
    4
    ;; bool _get_aruco
    1
    ;; bool _not_get_aruco
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _x
       (sys::poke _x (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _y
       (sys::poke _y (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _z
       (sys::poke _z (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float32 _roll
       (sys::poke _roll (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _pitch
       (sys::poke _pitch (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _yaw
       (sys::poke _yaw (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; bool _get_aruco
       (if _get_aruco (write-byte -1 s) (write-byte 0 s))
     ;; bool _not_get_aruco
       (if _not_get_aruco (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _x
     (setq _x (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _y
     (setq _y (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _z
     (setq _z (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float32 _roll
     (setq _roll (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _pitch
     (setq _pitch (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _yaw
     (setq _yaw (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; bool _get_aruco
     (setq _get_aruco (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; bool _not_get_aruco
     (setq _not_get_aruco (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get auto_charge_service::aurco_info :md5sum-) "8e734168b30b8d8c8907e55348fd895a")
(setf (get auto_charge_service::aurco_info :datatype-) "auto_charge_service/aurco_info")
(setf (get auto_charge_service::aurco_info :definition-)
      "float64 x
float64 y
float64 z

float32 roll
float32 pitch
float32 yaw

bool get_aruco
bool not_get_aruco
")



(provide :auto_charge_service/aurco_info "8e734168b30b8d8c8907e55348fd895a")


