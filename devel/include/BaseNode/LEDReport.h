// Generated by gencpp from file BaseNode/LEDReport.msg
// DO NOT EDIT!


#ifndef BASENODE_MESSAGE_LEDREPORT_H
#define BASENODE_MESSAGE_LEDREPORT_H

#include <ros/service_traits.h>


#include <BaseNode/LEDReportRequest.h>
#include <BaseNode/LEDReportResponse.h>


namespace BaseNode
{

struct LEDReport
{

typedef LEDReportRequest Request;
typedef LEDReportResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct LEDReport
} // namespace BaseNode


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::BaseNode::LEDReport > {
  static const char* value()
  {
    return "5281860a67e91bcd8b35c89d74678b97";
  }

  static const char* value(const ::BaseNode::LEDReport&) { return value(); }
};

template<>
struct DataType< ::BaseNode::LEDReport > {
  static const char* value()
  {
    return "BaseNode/LEDReport";
  }

  static const char* value(const ::BaseNode::LEDReport&) { return value(); }
};


// service_traits::MD5Sum< ::BaseNode::LEDReportRequest> should match 
// service_traits::MD5Sum< ::BaseNode::LEDReport > 
template<>
struct MD5Sum< ::BaseNode::LEDReportRequest>
{
  static const char* value()
  {
    return MD5Sum< ::BaseNode::LEDReport >::value();
  }
  static const char* value(const ::BaseNode::LEDReportRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::BaseNode::LEDReportRequest> should match 
// service_traits::DataType< ::BaseNode::LEDReport > 
template<>
struct DataType< ::BaseNode::LEDReportRequest>
{
  static const char* value()
  {
    return DataType< ::BaseNode::LEDReport >::value();
  }
  static const char* value(const ::BaseNode::LEDReportRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::BaseNode::LEDReportResponse> should match 
// service_traits::MD5Sum< ::BaseNode::LEDReport > 
template<>
struct MD5Sum< ::BaseNode::LEDReportResponse>
{
  static const char* value()
  {
    return MD5Sum< ::BaseNode::LEDReport >::value();
  }
  static const char* value(const ::BaseNode::LEDReportResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::BaseNode::LEDReportResponse> should match 
// service_traits::DataType< ::BaseNode::LEDReport > 
template<>
struct DataType< ::BaseNode::LEDReportResponse>
{
  static const char* value()
  {
    return DataType< ::BaseNode::LEDReport >::value();
  }
  static const char* value(const ::BaseNode::LEDReportResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BASENODE_MESSAGE_LEDREPORT_H
